package com.heima;


/**
 * 方法: 就是完成特定功能的代码块
 *
 * 定义格式: 修饰符 返回值类型 方法名 (参数类型 参数名1,参数类型 参数名2,...) {
 *     方法体
 *     return 返回值
 * }
 *
 *
 * 格式解释:
 *      修饰符: public static
 *      返回值类型: 用于限定返回值的数据类型
 *      方法名: 方便我们调用方法起的名字
 *      参数类型: 用于限定调用方法时传入的数据的类型
 *      参数名: 用于接收调用方法时传入的数据的变量
 *      方法体: 完成指定功能的代码
 *      return: 结束方法,并将返回值带给调用者
 *
 * 写方法需要的两个明确
 *      1. 明确返回值类型
 *      2. 明确参数列表
 *
 * 方法的调用(有明确返回值的方法调用)
 *      1. 单独调用--无意义
 *      2. 输出调用,有结果但是无法操作
 *      3. 赋值调用: 推荐的方式
 *
 * 方法重载: 在同一个类中出现了方法名相同
 * 方法重载的特点
 *      1. 方法名相同,参数列表不同--与返回值无关
 *      2. 参数列表不同
 *          1. 参数个数不同
 *          2. 参数类型不同
 *  在调用方法的时候,java虚拟机会通过参数列表的不同来区分同名的方法
 * 
 * 方法的参数如果是基本数据类型:形参的改变不影响实际参数.
 * 形参:用来接收实际参数的变量
 * 实参:用来接收传递参数的变量
 *
 */
public class MethodDemo {
    public static void main(String[] args){
        int a = 10;
//        int sum = sum(2,3);
//        System.out.println( sum );
        fun(a);
    }

    // 求和的方法 有明确返回值
    public static int sum(int a,int b) {
        return a+b;
    }

    // 没有明确返回值 使用 void
    public static void fun(int a) {
        a-=5;
        System.out.println( a );
    }


}
